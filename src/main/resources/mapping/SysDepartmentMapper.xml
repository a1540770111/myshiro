<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dcy.dao.SysDepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.dcy.model.SysDepartment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parentID" property="parentid" jdbcType="INTEGER" />
    <result column="parentIDs" property="parentids" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, parentID, parentIDs, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dcy.model.SysDepartment" >
    insert into sys_department (id, name, parentID, 
      parentIDs, state)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, 
      #{parentids,jdbcType=VARCHAR}, #{state,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.dcy.model.SysDepartment" >
    insert into sys_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentid != null" >
        parentID,
      </if>
      <if test="parentids != null" >
        parentIDs,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="parentids != null" >
        #{parentids,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dcy.model.SysDepartment" >
    update sys_department
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentID = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="parentids != null" >
        parentIDs = #{parentids,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dcy.model.SysDepartment" >
    update sys_department
    set name = #{name,jdbcType=VARCHAR},
      parentID = #{parentid,jdbcType=INTEGER},
      parentIDs = #{parentids,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKeyForList" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select
    dep.id, dep.name, dep.parentID as pId, dep.parentIDs, dep.state,
    (SELECT d.`Name` FROM sys_department d where d.id = dep.parentID) as parentname
    FROM sys_department dep WHERE dep.state = 0 AND FIND_IN_SET(id,queryChildrenAreaInfo(#{id,jdbcType=INTEGER}))
  </select>

  <select id="selectByPrimaryKeyForIdList" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT id FROM sys_department WHERE dep.state = 0 AND id = #{id,jdbcType=INTEGER} or parentID = #{id,jdbcType=INTEGER}
  </select>


</mapper>