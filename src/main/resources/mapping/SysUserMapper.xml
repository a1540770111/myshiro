<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dcy.dao.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.dcy.model.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="departmentID" property="departmentid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="locked" property="locked" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="dataRange" property="datarange" jdbcType="INTEGER" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="login_date" property="loginDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="sexName" property="sexname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    u.id, u.departmentID, u.username, u.password, u.salt, u.locked, u.name, u.email, u.phone, u.photo, u.dataRange,
    u.login_ip, u.login_date, u.remarks, u.sex, u.birthday
  </sql>

  <sql id="Where_Sql" >
    <if test="user.username != null and user.username != ''" >
      AND u.UserName like concat('%', #{user.username,jdbcType=VARCHAR}, '%')
    </if>
    <if test="user.email != null and user.email != ''" >
      AND u.Email like concat('%', #{user.email,jdbcType=VARCHAR}, '%')
    </if>
    <if test="user.photo != null and user.photo != ''" >
      AND u.Phone like concat('%', #{user.phone,jdbcType=VARCHAR} , '%')
    </if>
  </sql>

  <sql id="OrderBy_Sql" >
    <if test="BST.sort != null and BST.sort != ''" >
      order by  ${BST.sort} ${BST.order}
    </if>
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sys_user u
    where u.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByIds" parameterType="java.lang.Integer" >
    delete from sys_user
    where ID IN
    <foreach collection="ids" item="item"  open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <insert id="insert" parameterType="com.dcy.model.SysUser" >
    insert into sys_user (id, departmentID, username,
    password, salt, locked,
    name, email, phone,
    photo, dataRange, login_ip,
    login_date, remarks, sex,
    birthday)
    values (#{id,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{locked,jdbcType=BIT},
    #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
    #{photo,jdbcType=VARCHAR}, #{datarange,jdbcType=INTEGER}, #{loginIp,jdbcType=VARCHAR},
    #{loginDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
    #{birthday,jdbcType=DATE})
  </insert>
  <!-- 返回 -->
  <insert id="insertSelective" parameterType="com.dcy.model.SysUser" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="departmentid != null" >
        departmentID,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="datarange != null" >
        dataRange,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="loginDate != null" >
        login_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="datarange != null" >
        #{datarange,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null" >
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dcy.model.SysUser" >
    update sys_user
    <set >
      <if test="departmentid != null" >
        departmentID = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=BIT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="datarange != null" >
        dataRange = #{datarange,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null" >
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dcy.model.SysUser" >
    update sys_user
    set departmentID = #{departmentid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      dataRange = #{datarange,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserNameIsRepeat" resultType="java.lang.Integer">
    select COUNT(ID)
    from sys_user WHERE userName = #{userName,jdbcType=VARCHAR}
  </select>

  <select id="selectByUserNamePassWord" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from sys_user u
    where u.username = #{username,jdbcType=VARCHAR} and u.password = #{password,jdbcType=VARCHAR}
  </select>

  <select id="selectByUserName" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from sys_user u
    where u.username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="getUserCount" resultType="java.lang.Integer">
    SELECT COUNT(u.ID) as count  from sys_user u WHERE 1=1
    <include refid="Where_Sql"/>
  </select>

  <select id="getUserPageList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />,d.NAME as sexName
    from sys_user u
    INNER JOIN (SELECT d.`code`,d.`name` FROM sys_dict d WHERE d.type = 'sex') d on u.sex = d.`code`
    WHERE 1=1
    <include refid="Where_Sql"/>
    <include refid="OrderBy_Sql"/>
    LIMIT #{BST.offset},#{BST.limit}
  </select>

  <select id="getRoleNameByUserName" resultType="java.lang.String">
    SELECT r.name FROM sys_user u INNER JOIN sys_user_role sur on u.id = sur.userID INNER JOIN sys_role r on sur.roleID = r.id
    WHERE u.username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="getPermissionsByUserName" resultType="java.lang.String">
    SELECT m.permission FROM sys_user u INNER JOIN sys_user_role sur on u.id = sur.userID INNER JOIN sys_role r on sur.roleID = r.id
    INNER JOIN sys_role_menu srm on r.id = srm.roleID INNER JOIN sys_menu m on srm.menuID = m.id
    WHERE u.username = #{username,jdbcType=VARCHAR} AND m.available = 0 and permission != ''
  </select>

  <delete id="deleteUserRoleByUserId" parameterType="java.lang.Integer" >
    delete from sys_user_role
    where UserId = #{userId,jdbcType=INTEGER}
  </delete>


  <insert id="insertUserRoleBatch" parameterType="java.util.List" >
    insert into sys_user_role (UserId, RoleId
    )
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.userId},#{item.roleId})
    </foreach>
  </insert>

</mapper>